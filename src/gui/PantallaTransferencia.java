package gui;

import conexionBD.Conexion;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author Anthony
 */
public class PantallaTransferencia extends javax.swing.JFrame {

    Conexion conexion = new Conexion();
    int cedula, cantidad,fondosPasa, fondosRecibe, cantidadPasa,cantidadRecibe, mismoCliente,xMouse, yMouse;
    String sqlPasa, sqlRecibe, sqlTransaccion;
    boolean encontrado,poseeFondos,mismaCuenta;
    
    /**
     * Creates new form PantallaTransferencia
     */
    public PantallaTransferencia() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnAtras = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnTransferir = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cantidadText = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        cedulaText = new javax.swing.JTextField();
        btnMover = new javax.swing.JLabel();
        btnSalir = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Transferencia");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 500, 40));

        jLabel2.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Digite la cantidad  de dinero a transferir:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 260, 500, 20));

        btnAtras.setBackground(new java.awt.Color(255, 255, 255));
        btnAtras.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        btnAtras.setForeground(new java.awt.Color(102, 102, 102));
        btnAtras.setText("Atrás");
        btnAtras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAtrasMouseClicked(evt);
            }
        });
        jPanel1.add(btnAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 470, -1, -1));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 330, 130, 10));

        btnTransferir.setBackground(new java.awt.Color(173, 193, 137));
        btnTransferir.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        btnTransferir.setForeground(new java.awt.Color(0, 0, 0));
        btnTransferir.setText("Transferir");
        btnTransferir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTransferirMouseClicked(evt);
            }
        });
        jPanel1.add(btnTransferir, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 370, -1, -1));

        jLabel4.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Digite la cédula de la cuenta destino:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 500, 20));

        cantidadText.setBackground(new java.awt.Color(255, 255, 255));
        cantidadText.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        cantidadText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cantidadText.setBorder(null);
        jPanel1.add(cantidadText, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 310, 130, 20));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 220, 130, 10));

        cedulaText.setBackground(new java.awt.Color(255, 255, 255));
        cedulaText.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        cedulaText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cedulaText.setBorder(null);
        jPanel1.add(cedulaText, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, 130, 20));

        btnMover.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                btnMoverMouseDragged(evt);
            }
        });
        btnMover.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnMoverMousePressed(evt);
            }
        });
        jPanel1.add(btnMover, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 470, 30));

        btnSalir.setFont(new java.awt.Font("Roboto", 0, 36)); // NOI18N
        btnSalir.setForeground(new java.awt.Color(173, 193, 137));
        btnSalir.setText("x");
        btnSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSalirMouseClicked(evt);
            }
        });
        jPanel1.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 20, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 500));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAtrasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAtrasMouseClicked
        PantallaMenu pm = new PantallaMenu();
        pm.show();
        this.hide();
    }//GEN-LAST:event_btnAtrasMouseClicked

    private void btnTransferirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTransferirMouseClicked

        cedula=0;
        cantidad=0;
        fondosPasa=0;
        fondosRecibe=0;
        cantidadPasa=0;
        cantidadRecibe=0;
        mismoCliente=0;
        sqlPasa="";
        sqlRecibe="";
        sqlTransaccion="";
        encontrado=false;
        poseeFondos=false;
        mismaCuenta=false;
        
        //Condicionales para espacios vacíos y letras en espacio de cédula.
        if(cedulaText.getText().trim().isEmpty() || cantidadText.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Debe llenar todos los campos.");
        }else if(!cedulaText.getText().trim().matches("\\d+") || cantidadText.getText().trim().isEmpty() ){
            JOptionPane.showMessageDialog(null, "Los campos sólo pueden contener números.");
        }else if(cantidadText.getText().trim().matches("0")){
            JOptionPane.showMessageDialog(null, "Cantidad de transferencia no permitida.");
        }else{
            PantallaLogeo pl = new PantallaLogeo();
            cedula = Integer.parseInt(cedulaText.getText());
            cantidad = Integer.parseInt(cantidadText.getText());

            String clientePasa = "select * from cuentas where cedula_cliente='"+pl.cedula+"'";
            String clienteRecibe = "select * from cuentas where cedula_cliente='"+cedula+"'";
            String clienteExiste = "select * from clientes where cedula_cliente='"+cedula+"'";
            String mismaCuenta = "select * from clientes where cedula_cliente='"+pl.cedula+"'";

            //Proceso de conexion con la base de datos para ingresar al menú del servicio.
            try{
                conexion.conectar();
                Statement st = conexion.cn.createStatement();
                ResultSet rs = st.executeQuery(clienteExiste);

                //Condicional para saber si se encuentra la cuenta a la que se envían fondos.
                if(rs.next()){
                    encontrado = true;
                }
                
                ResultSet rs2 = st.executeQuery(mismaCuenta);
                
                //Condicional para saber si se quieren enviar fondos a la misma cuenta.
                if(rs2.next()){
                    mismoCliente = Integer.parseInt(rs2.getString("cedula_cliente"));
                }

                if(encontrado == false){
                        JOptionPane.showMessageDialog(null, "No se encontró el usuario con la cédula ingresada.");
                }else {
                    ResultSet rs3 = st.executeQuery(clientePasa);
                    
                    //Condicional para validar si la cuenta tiene fondos para enviar y obtener el valor.
                    if(rs3.next()){
                        fondosPasa = Integer.parseInt(rs3.getString("fondos"));
                        poseeFondos=true;
                    }
                    
                    ResultSet rs4 = st.executeQuery(clienteRecibe);
                    
                    //Condicional para obtener la cantidad de fondos de la cuenta que recibe los fondos.
                    if(rs4.next()){
                        fondosRecibe = Integer.parseInt(rs4.getString("fondos"));
                    }
                    
                    if(poseeFondos == false || cantidad>fondosPasa){
                        JOptionPane.showMessageDialog(null, "La cantidad que quiere transferir es mayor de lo que posee su cuenta.");
                    }else if(cedula==mismoCliente){
                        JOptionPane.showMessageDialog(null, "No puede transferir fondos a esta misma cuenta.");
                    }else{
                        cantidadPasa = fondosPasa - cantidad;

                        sqlPasa="insert into cuentas (cedula_cliente,fondos) values ('"+pl.cedula+"','"+cantidadPasa+"') on duplicate key update fondos='"+cantidadPasa+"'";
                        st.executeUpdate(sqlPasa);

                        cantidadRecibe = fondosRecibe+cantidad;
                        sqlRecibe = "insert into cuentas (cedula_cliente,fondos) values ('"+cedula+"','"+cantidadRecibe+"') on duplicate key update fondos='"+cantidadRecibe+"'";
                        st.executeUpdate(sqlRecibe);

                        sqlTransaccion = "insert into transacciones (cedula_cliente,tipo_transaccion,cantidad) values ('"+pl.cedula+"','Transferencia a "+cedula+"','"+cantidad+"')";
                        st.executeUpdate(sqlTransaccion);
                        JOptionPane.showMessageDialog(null, "Transferencia realizada correctamente.");
                    }
                }
                conexion.desconectar();
            }catch(SQLException ex){
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_btnTransferirMouseClicked

    private void btnMoverMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMoverMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_btnMoverMousePressed

    private void btnMoverMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMoverMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_btnMoverMouseDragged

    private void btnSalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalirMouseClicked
        Object [] opciones = {"Sí","No"};
        int salir = JOptionPane.showOptionDialog(null, "¿Desea salir?", null, JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, null, opciones, null);
        if(salir == JOptionPane.YES_OPTION){
            System.exit(0);
        }    
    }//GEN-LAST:event_btnSalirMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaTransferencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaTransferencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaTransferencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaTransferencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaTransferencia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnAtras;
    private javax.swing.JLabel btnMover;
    private javax.swing.JLabel btnSalir;
    private javax.swing.JButton btnTransferir;
    private javax.swing.JTextField cantidadText;
    private javax.swing.JTextField cedulaText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
